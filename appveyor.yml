version: 1.0.{build}
image:
- Visual Studio 2019
- Visual Studio 2017
configuration:
- release
- patched
cache:
  -  c:\msys64\var\cache\pacman\pkg
  -  dist
  -  msys2
environment:
  global:
    APPVEYOR_SAVE_CACHE_ON_ERROR: true
    SAVE_ARTIFACT: false
  matrix:
  - container_tag: ltsc2016
    isolation: process
  - container_tag: ltsc2016
    isolation: hyperv
  - container_tag: ltsc2019
    isolation: process
  - container_tag: ltsc2019
    isolation: hyperv
matrix:
  allow_failures:
    - container_tag: ltsc2016
      isolation: process
    - container_tag: ltsc2016
      isolation: hyperv
    - container_tag: ltsc2019
      isolation: process
    - container_tag: ltsc2019
      isolation: hyperv
  exclude:
    - image: Visual Studio 2017
      container_tag: ltsc2019
    - image: Visual Studio 2019
      container_tag: ltsc2016
      isolation: process
    - image: Visual Studio 2017
      container_tag: ltsc2016
      isolation: hyperv
install:
  - cmd:
      set PATH=c:\msys64\usr\bin;%PATH%
      set MSYSTEM=MSYS
  - cmd: '
      if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" (
        rd /s /q c:\msys64\etc\pacman.d\gnupg &
        mkdir msys2 &
        curl -L -o msys2\msys2-base-x86_64-20230127.tar.xz https://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20230127.tar.xz &&
        rmdir /s /q c:\msys64 &&
        7z.exe x -so msys2\msys2-base-x86_64-20230127.tar.xz | 7z.exe x -ttar -si -o\ -aoa &&
        c:\msys64\msys2_shell.cmd -defterm -no-start -here -msys <NUL &&
        bash -x -c "pacman -Syu --noconfirm" &&
        bash -x -c "pacman -Syu --noconfirm"
      )'
build_script:
  - cmd: '
      if %configuration% == patched ( bash -x -c "
        rm -rf msys2-runtime ;
        rm -rf src ;
        mkdir -p src ;
        git clone --depth 1 --filter=tree:0 --no-checkout -b in-container-posix-semantics https://github.com/YO4/msys2-runtime src/msys2-runtime ;
        pacman -S --noconfirm base-devel ;
        makepkg -d -e -o;
        VER=(`makepkg --packagelist`) ;
        test -e dist/`basename ${VER[0]}` -a -e dist/`basename ${VER[1]}` || (
          makepkg -s --noconfirm ;
          rm -f dist/* ;
          mkdir -p dist;
          mv `makepkg --packagelist` dist/ 
        )") else (echo > NUL)'
test_script:
  - cmd: |
      mkdir binded_dir
      mkdir opt
      if %configuration% == patched sh -x -c "pacman -U --noconfirm ./dist/msys2-runtime-*"
      copy test_rm_and_mv.cmd opt
      set SAVE_ARTIFACT=true
      docker run --isolation=%isolation% -v "c:\msys64:c:\msys64" -v "%APPVEYOR_BUILD_FOLDER%\binded_dir:c:\binded_dir" -v "%APPVEYOR_BUILD_FOLDER%\opt:c:\opt" mcr.microsoft.com/windows/servercore:%container_tag% cmd.exe /s /c "c:\opt\test_rm_and_mv.cmd"
artifacts:
- path: opt\*.trace
- path: dist\msys2-runtime-*
on_failure:
- if %SAVE_ARTIFACT%==true for %%I in (opt\*.trace dist\msys2-runtime-*) do appveyor PushArtifact %%I
